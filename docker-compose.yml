version: "3.7"

services:
  db:
    build:
      context: .
      dockerfile: ./docker/images/postgres/dockerfile
    image: attikos/postgres-13.7:latest
    container_name: postgres
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      # PGUSER: ${PGUSER}
      # PGPASSWORD: ${PGPASSWORD}
      # PGDATABASE: ${PGDATABASE}
      PGPORT: ${POSTGRES_PORT}
      # PGHOST: ${PGHOST}
    hostname: postgres
    networks:
      - my_network
    volumes:
      - ./db/sql:/docker-entrypoint-initdb.d/
      - ./db/volume:/var/lib/postgresql/data
    restart: on-failure

  node:
    build:
      context: .
      dockerfile: ./docker/images/node/dockerfile
    image: attikos/node:16.15.1
    env_file:
      - .env
    ports:
     - "${PORT}:${PORT}"
    container_name: npm-start
    working_dir: /app
    volumes:
      - ./:/app:rw
    # command: bash -c "npm install --no-save"
    command: "npm install --no-save"
    # entrypoint: "/true"
    entrypoint: npm run start:dev
    networks:
      - my_network
    restart: on-failure

networks:
  my_network:
    driver: bridge
